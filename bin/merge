#!/usr/bin/env php
<?php
require_once(dirname(__FILE__) . "/../config.php");

$args = getopt("f:t:c::u::p::");
//optional c argument to only merge revisions with a comment

if ( !strlen(@$args['f']) ) {
	die("You must provide 'f' as the path relative to $repoPath for the branch you are merging from.\n");
} else {
	$from = $args['f'];
}
if ( !strlen(@$args['t']) ) {
	die("You must provide 't' as the path relative to $repoPath for the branch you are merging into.\n");
} else {
	$to = $args['t'];
}

if ( isset($args['p']) ) {
	echo "Pretending...\n";
}

//update from and to
echo "Updating source and target first...\n";
if ( substr($from, 0, 1) != "^" ) {
	chdir("$repoPath/$from");
	passthru("up");

	$db = new SQLite3("$repoPath/$from/subversion.db");
} else {
	echo "\t\033[1;36mskipping remote update\033[0m\n";
}
chdir("$repoPath/$to");
passthru("up");

chdir($repoPath);

echo "\nStarting MERGE Process...\n";

foreach ( $repos as $repo => $target ) {
	echo "$repo -->\n";
	$revisions = array();

	if ( substr($from, 0, 1) == "^" ) {
		$fr = $from;
	} else {
		$fr = "$repoPath$from/$target";
	}

	if ( isset($args['c']) ) {
		$sql = "select * from revisions where repo='$repo' AND message LIKE '%{$args['c']}%' ORDER BY revision ASC";
		$results = $db->query($sql);
		while ( $row = $results->fetchArray() ) {
			echo "\t\033[1;32mmerging\033[0m ({$row['revision']}) '$from' > '$to'...\n";
			echo "\t" . $row['message'] . "\n";
			if ( isset($args['u']) ) {
				$revisions[] = "-" . $row['revision'];
			} else {
				$revisions[] = $row['revision'];
			}
		}
		if ( !count($revisions) ) {
			echo "\t\033[1;36mnothing merged\033[0m\n";
			continue;
		}
		$cmd = "svn merge -x--ignore-eol-style -x-b --non-interactive -c " . implode($revisions, ",") . " $fr $repoPath$to/$target";
		if ( isset($args['p']) ) {
			echo "$cmd\n";
		} else {
			$res = shell_exec($cmd);
		}
		echo "\tdone.\n";
	} else {
		echo "\t\033[1;32mmerging\033[0m '$from' > '$to'...";
		$cmd = "svn merge -x--ignore-eol-style -x-b --non-interactive $fr $repoPath$to/$target";
		if ( isset($args['p']) ) {
			echo "$cmd\n";
		} else {
			$res = shell_exec($cmd);
		}
		echo "done.\n";
	}
}
